package com.shiva.csv;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;



/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args ) throws IOException
    {
    		//processFile(new File("//Users//shiva//Symptoms - Updated_One.csv"));
    	parseCsv("//Users//shiva//Diseases.csv");
    }

	private static void parseCsv(String file) {

        String csvFile = file;
        BufferedReader br = null;
        String line = "";
        String cvsSplitBy = ";";
        Set<String> set=new TreeSet<>();

        try {

            br = new BufferedReader(new FileReader(csvFile));
            while ((line = br.readLine()) != null) {

                // use comma as separator
                String[] symptom = line.split(cvsSplitBy);

                //System.out.println("Country [Symptom Name= " + symptom[0] + 
                	//	" , Disease name=" + symptom[1] + " , Symptom Description=" + symptom[2] +
                	//	", Hits=" + symptom[3]+ " , Last Accessed= "+ symptom[4] +" Treatment= "
                //		+ symptom[5] +"]");
                
              
                
                set.add(symptom[0]);
                

            }
           for(String s:set) {
        	   System.out.println(s);
           }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
		
	}
	static void processFile(final File file) throws IOException {
	    FileReader filereader = new FileReader(file);
	    BufferedReader bufferedReader = new BufferedReader(filereader);
	    bufferedReader.readLine();// try-catch omitted
	    final CSVFormat format = CSVFormat.DEFAULT.withQuote(null);
	    CSVParser parser = new CSVParser(bufferedReader, format);
	    final List<CSVRecord> records = parser.getRecords();
	    for(CSVRecord record:records) {
	    	System.out.println(record.get(0));
	    }
	}
}
